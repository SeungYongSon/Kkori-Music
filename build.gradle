// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.31'
    ext{
        compileSdkVersion = 28
        minSdkVersion = 23
        targetSdkVersion = 28

        gradleVersion = '3.3.2'

        rxAndroidVersion = '2.1.1'
        rxVersion = '2.2.8'
        rxBindingVersion = '3.0.0-alpha2'

        kotlinVersion = '1.3.21'
        ktxVersion = '1.0.1'

        constraintLayoutVersion = '2.0.0-alpha3'
        lifecycleVersion = '2.1.0-alpha02'
        materialVersion = '1.0.0'
        navigationVersion = '2.0.0'
        recyclerViewVersion = '1.1.0-alpha02'
        roomVersion = '2.1.0-alpha07'
        workVersion = '2.0.0-rc01'
        supportLibraryVersion = '1.0.2'
        mediaVersion = '1.0.0'
        mediaStylePaletteVersion = '1.3'
        slidingUpPanelVersion = '3.4.0'

        glideVersion = '4.8.0'

        retrofitVersion = '2.5.0'
        okhttp3Version = '3.12.1'

        daggerVersion = '2.21'

        runnerVersion = '1.0.1'
        junitVersion = '4.12'
        espressoVersion = '3.1.0-alpha4'
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:1.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

Object propOrDef(String propertyName, Object defaultValue) {
    def properties = new Properties()
    def keyFile = rootProject.file("signing/key.properties")
    if (keyFile.exists()) {
        keyFile.withInputStream { stream -> properties.load(stream) }
    }
    def propertyValue = properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}